# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

jobs:
- job: Windows

  pool:
    vmImage: 'vs2017-win2016'

  variables:
    buildConfiguration: 'Release'

  steps:
  - script: dotnet restore Spritey.sln
    displayName: Restore Spritey.sln
  - script: dotnet build ./src/Spritey/Spritey.csproj
    displayName: Build Spritey.sln
  - task: NuGetCommand@2
    displayName: Restore Code Coverage Artifacts
    inputs:
      command: restore
      restoreSolution: './tests/CodeCoverage/packages.config'
      restoreDirectory: 'packages'
  - script: tests\CodeCoverage\packages\OpenCover.4.6.519\tools\OpenCover.Console.exe -target:"dotnet.exe" -targetargs:"test tests\Spritey.Test\Spritey.Test.csproj -c Release -f netcoreapp2.1 /p:codecov=true" -register:user -threshold:10 -oldStyle -safemode:off -output:.\Spritey.Coverage.xml -hideskipped:All -returntargetcode
    displayName: Run Tests and Generate Coverage Report
  - script: tests\CodeCoverage\packages\Codecov.1.1.0\tools\codecov.exe -f Spritey.Coverage.xml -t $(CODECOV_TOKEN)
    displayName: Publish Coverage Results to CodeCov

- job: Linux

  pool:
    vmImage: 'Ubuntu 16.04'

  variables:
    buildConfiguration: 'Release'

  steps:
  - script: dotnet restore Spritey.sln
    displayName: Restore Spritey.sln
  - script: dotnet build ./src/Spritey/Spritey.csproj
    displayName: Build Spritey.sln
  - script: dotnet test ./tests/Spritey.Test/Spritey.Test.csproj --configuration $(buildConfiguration) --framework netcoreapp2.1 --logger trx
    displayName: Run Tests and Generate Report
  - task: PublishTestResults@2
    displayName: Publish Test Report
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
